# set column names
colnames(crime) <- c("State","Data", "Total","Violent.crime","Murder.and.nonnegligent.manslaughter"
,"Rape" ,"Robbery" ,"Aggravated.assault" ,"Property.crime"
,"Burglary" ,"Larceny.theft" ,"Motor.vehicle.theft" ,"Year" )
# assign "crime" to a new dataset
assign(paste0("cr",i), crime)
}
## combine data by columns from 1995 to 2019
uscrime <- rbind(cr1995, cr1996, cr1997, cr1998, cr1999,
cr2000, cr2001, cr2002, cr2003, cr2004,
cr2005, cr2006, cr2007, cr2008, cr2009,
cr2010, cr2011, cr2012, cr2013, cr2014,
cr2015, cr2016, cr2017, cr2018, cr2019)
# remove typo in two cells
uscrime$Property.crime[uscrime$State=="NEWHAMPSHIRE" & uscrime$Year==1995 & uscrime$Data=="Rate"] <- "2540.9"
uscrime$Property.crime[uscrime$State=="ALABAMA" & uscrime$Year==1995 & uscrime$Data=="Population"] <- "179294"
## convert some character variables to numeric variables
uscrime <- data.frame(uscrime$State, uscrime$Data, lapply(uscrime[,3:12], function(x) as.numeric(x)), uscrime$Year)
## import data
for(i in 1995:2019){
if(i < 1999){
assign(paste0("crime",i), read.xlsx(paste0("crime",i,".xlsx"),
sheetIndex=1, header=TRUE))
} else if(i %in% c(2001,2003)) {
assign(paste0("crime",i), read.xlsx(paste0("crime",i,".xls"),
sheetIndex=1, header=TRUE, startRow=5))
} else {
assign(paste0("crime",i), read.xlsx(paste0("crime",i,".xls"),
sheetIndex=1, header=TRUE, startRow=4))
}
}
## generate dataset (rate and total population) by state (1995-2004)
for(i in 1995:2004){
# assign dataset to "crime"
assign("crime", get(paste0("crime", i)))
# create state column (all capital letters) from Area
states <- as.data.frame(ifelse(grepl('([A-Z]|[A-Z][0-9])$',crime$Area), crime$Area, NA))
# fill missing value with previous values
states <- na.locf(states, na.rm=FALSE)
# combine states column and crime data
crime <- cbind(states, crime)
# change column name to state
colnames(crime)[1] <- "State"
# change column name to Data
colnames(crime)[2] <- "Data"
# change column name to Total
colnames(crime)[3] <- "Total"
# extract rate rows and state total rows for each state
if(i %in% 1995:1997){
final <- crime[grepl('^(inhabitants|State Total)',crime$Data),]
final[grepl('inhabitants',final$Data), 2] <- "Rate"
final[grepl('State Total',final$Data), 2] <- "Population"
} else {
final <- crime[grepl('(Rate|State Total)',crime$Data),]
final[grepl('Rate',final$Data), 2] <- "Rate"
final[grepl('State Total',final$Data), 2] <- "Population"
}
# assign "final" to a new dataset
assign(paste0("cr",i), final)
}
## generate dataset (rate and total population) by state (2005-2019)
for(i in 2005:2019){
# assign dataset to "crime"
assign("crime", get(paste0("crime", i)))
# fill missing value with previous values
crime$State <- na.locf(crime$State, na.rm=FALSE)
# extract rate rows and state total rows for each state
final <- crime[which(grepl('Rate',crime[,3]) | grepl('State Total',crime[,2])),]
# change column name to Data
colnames(final)[2] <- "Data"
final <- final[,-3]
# change column name to Total
colnames(final)[3] <- "Total"
#
final[which(grepl('Rate',final$Data)|is.na(final$Data)), 2] <- "Rate"
final[grepl('State Total',final$Data), 2] <- "Population"
# assign "final" to a new dataset
assign(paste0("cr",i), final)
}
## select specific columns and add "Year" column
for(i in 1995:2019){
# assign dataset to "crime"
assign("crime", get(paste0("cr", i)))
# select specific columns
if(i %in% 1995:1998){
crime <- crime[,c(1:3,6,8:11,7,12:14)]
} else if(i %in% 1999:2002) {
crime <- crime[,c(1:3,6,8:11,7,13:15)]
} else if(i %in% c(2003:2010, 2012, 2017:2018)) {
crime <- crime[,c(1:12)]
} else if(i %in% 2013:2016) {
crime <- crime[,c(1:6, 8:13)]
}
# add "Year" column
crime$Year <- i
# remove numbers from state names
crime$State <-  gsub('[0-9]+', '', crime$State)
# remove Not Word from state names
crime$State <-  gsub('\\W', '', crime$State)
# set row names to NULL
rownames(crime) <- NULL
# set column names
colnames(crime) <- c("State","Data", "Total","Violent.crime","Murder.and.nonnegligent.manslaughter"
,"Rape" ,"Robbery" ,"Aggravated.assault" ,"Property.crime"
,"Burglary" ,"Larceny.theft" ,"Motor.vehicle.theft" ,"Year" )
# assign "crime" to a new dataset
assign(paste0("cr",i), crime)
}
## combine data by columns from 1995 to 2019
uscrime <- rbind(cr1995, cr1996, cr1997, cr1998, cr1999,
cr2000, cr2001, cr2002, cr2003, cr2004,
cr2005, cr2006, cr2007, cr2008, cr2009,
cr2010, cr2011, cr2012, cr2013, cr2014,
cr2015, cr2016, cr2017, cr2018, cr2019)
# remove typo in two cells
uscrime$Property.crime[uscrime$State=="NEWHAMPSHIRE" & uscrime$Year==1995 & uscrime$Data=="Rate"] <- "2540.9"
uscrime$Property.crime[uscrime$State=="ALABAMA" & uscrime$Year==1995 & uscrime$Data=="Population"] <- "179294"
## convert some character variables to numeric variables
uscrime <- data.frame(uscrime$State, uscrime$Data, lapply(uscrime[,3:12], function(x) as.numeric(x)), uscrime$Year)
View(uscrime)
## Rename column name
colnames(uscrime)[1] <- "State"
colnames(uscrime)[2] <- "Data"
colnames(uscrime)[11] <- "Year"
View(uscrime)
# calculate one missing variable by definition in Year 2000
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"] <- uscrime$Burglary+uscrime$Larceny.theft+uscrime$Motor.vehicle.theft
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Rate"] <-   round((uscrime$Property.crime/11058)*10^5, 1)
View(uscrime)
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"]
View(uscrime)
# calculate one missing variable by definition in Year 2000
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"] <- uscrime$Burglary+uscrime$Larceny.theft+uscrime$Motor.vehicle.theft
uscrime$Total[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"]
uscrime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population",]
which(uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"),]
uscrime$Total[which(uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population")]
uscrime[which(uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"),]
str(uscrime)
uscrime$Property.crime[uscrime$State=="NEWHAMPSHIRE" & uscrime$Year==1995 & uscrime$Data=="Rate"]
# calculate one missing variable by definition in Year 2000
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"] <- uscrime$Burglary+uscrime$Larceny.theft+uscrime$Motor.vehicle.theft
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Rate"] <-   round((uscrime$Property.crime/11058)*10^5, 1)
View(uscrime)
View(uscrime)
# calculate one missing variable by definition in Year 2000
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"] <- 99033
View(uscrime)
View(uscrime)
# calculate one missing variable by definition in Year 2000
test <- uscrime %>%
filter(State="CONNECTICUT", Year=2000, Data="Population")
# calculate one missing variable by definition in Year 2000
test <- uscrime %>%
filter(State=="CONNECTICUT", Year==2000, Data=="Population")
View(test)
# calculate one missing variable by definition in Year 2000
test <- uscrime %>%
filter(State=="CONNECTICUT")
View(uscrime)
# calculate one missing variable by definition in Year 2000
test <- uscrime %>%
filter(State=="CONNECTICUT", Year=2000)
# calculate one missing variable by definition in Year 2000
test <- uscrime %>%
filter(State=="CONNECTICUT", Year==2000)
View(uscrime)
View(test)
str(uscrime)
# calculate one missing variable by definition in Year 2000
test <- uscrime %>%
filter(State=="CONNECTICUT", Year==2000)
View(test)
# calculate one missing variable by definition in Year 2000
test <- uscrime %>%
filter(State=="CONNECTICUT", uscrime$Data=="Population")
View(uscrime)
View(test)
## combine data by columns from 1995 to 2019
uscrime <- rbind(cr1995, cr1996, cr1997, cr1998, cr1999,
cr2000, cr2001, cr2002, cr2003, cr2004,
cr2005, cr2006, cr2007, cr2008, cr2009,
cr2010, cr2011, cr2012, cr2013, cr2014,
cr2015, cr2016, cr2017, cr2018, cr2019)
# remove typo in two cells
uscrime$Property.crime[uscrime$State=="NEWHAMPSHIRE" & uscrime$Year==1995 & uscrime$Data=="Rate"] <- "2540.9"
uscrime$Property.crime[uscrime$State=="ALABAMA" & uscrime$Year==1995 & uscrime$Data=="Population"] <- "179294"
View(uscrime)
## convert some character variables to numeric variables
uscrime <- data.frame(uscrime$State, uscrime$Data, lapply(uscrime[,3:12], function(x) as.numeric(x)), uscrime$Year)
## Rename column name
colnames(uscrime)[1] <- "State"
colnames(uscrime)[2] <- "Data"
colnames(uscrime)[13] <- "Year"
View(uscrime)
# calculate one missing variable by definition in Year 2000
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"] <- uscrime$Burglary+uscrime$Larceny.theft+uscrime$Motor.vehicle.theft
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Rate"] <-   round((uscrime$Property.crime/11058)*10^5, 1)
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"]
View(uscrime)
## combine data by columns from 1995 to 2019
uscrime <- rbind(cr1995, cr1996, cr1997, cr1998, cr1999,
cr2000, cr2001, cr2002, cr2003, cr2004,
cr2005, cr2006, cr2007, cr2008, cr2009,
cr2010, cr2011, cr2012, cr2013, cr2014,
cr2015, cr2016, cr2017, cr2018, cr2019)
# remove typo in two cells
uscrime$Property.crime[uscrime$State=="NEWHAMPSHIRE" & uscrime$Year==1995 & uscrime$Data=="Rate"] <- "2540.9"
uscrime$Property.crime[uscrime$State=="ALABAMA" & uscrime$Year==1995 & uscrime$Data=="Population"] <- "179294"
## convert some character variables to numeric variables
uscrime <- data.frame(uscrime$State, uscrime$Data, lapply(uscrime[,3:12], function(x) as.numeric(x)), uscrime$Year)
## Rename column name
colnames(uscrime)[1] <- "State"
colnames(uscrime)[2] <- "Data"
colnames(uscrime)[13] <- "Year"
# calculate one missing variable by definition in Year 2000
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"] <- 99033
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Rate"] <-   round((99033/11058)*10^5, 1)
View(uscrime)
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Rate"] <-   round((99033/3405565)*10^5, 1)
View(uscrime)
## combine data by columns from 1995 to 2019
uscrime <- rbind(cr1995, cr1996, cr1997, cr1998, cr1999,
cr2000, cr2001, cr2002, cr2003, cr2004,
cr2005, cr2006, cr2007, cr2008, cr2009,
cr2010, cr2011, cr2012, cr2013, cr2014,
cr2015, cr2016, cr2017, cr2018, cr2019)
# remove typo in two cells
uscrime$Property.crime[uscrime$State=="NEWHAMPSHIRE" & uscrime$Year==1995 & uscrime$Data=="Rate"] <- "2540.9"
uscrime$Property.crime[uscrime$State=="ALABAMA" & uscrime$Year==1995 & uscrime$Data=="Population"] <- "179294"
## convert some character variables to numeric variables
uscrime <- data.frame(uscrime$State, uscrime$Data, lapply(uscrime[,3:12], function(x) as.numeric(x)), uscrime$Year)
## Rename column name
colnames(uscrime)[1] <- "State"
colnames(uscrime)[2] <- "Data"
colnames(uscrime)[13] <- "Year"
# calculate one missing variable by definition in Year 2000
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Population"] <- 99033
uscrime$Property.crime[uscrime$State=="CONNECTICUT" & uscrime$Year==2000 & uscrime$Data=="Rate"] <-   round((99033/3405565)*10^5, 1)
## save file
save(uscrime, file="uscrime.rda")
load("/Users/jessicahuang/Documents/GitHub/UScrime/uscrime.rda")
View(uscrime)
View(uscrime)
library(shiny)
library(shinyWidgets)
library(shinythemes)
library(dslabs)
library(tidyverse)
library(ggplot2)
library(plotly)
library(urbnmapr)
usstates <- urbnmapr::states
usstates$state_name <-  gsub(' ', '', usstates$state_name) %>% toupper
ui <- navbarPage("Crime in the US",
tabPanel("Line Chart",
sidebarLayout(
sidebarPanel(
helpText("Create a line chart and table with FBI's U.S. crime data set (1995-2019)"),
selectizeInput("crimeInput", label=strong("Crime"),
choices=list("Violent Crime"=
c(`All Violent Crimes`='Violent.crime',
`Murder and Non-negligent Manslaughter`='Murder.and.nonnegligent.manslaughter',
'Rape', 'Robbery'),
"Property Crime"=
c(`All Property Crime`='Property.crime',
'Burglary', `Larceny Theft`='Larceny.theft',
`Motor Vehicle Theft`='Motor.vehicle.theft')),
selected="Violent.crime"),
selectizeInput("stateInput", label=strong("State"),
choices=unique(uscrime$State),
selected="CONNECTICUT", multiple=TRUE),
sliderInput("yearInput", label=strong("Year"), min=1995, max=2019,
value=c(1995, 2019), sep=""),
),
mainPanel(
br(),
plotlyOutput("crimeplot", width=900, height=500),
br(), br(),
uiOutput("message"),
br(), br(),
tableOutput("crimetable")
)
)
),
tabPanel("Map",
sidebarLayout(
sidebarPanel(
selectizeInput("crime2Input", label=strong("Crime"),
choices=list("Violent Crime"=
c(`All Violent Crimes`='Violent.crime',
`Murder and Non-negligent Manslaughter`='Murder.and.nonnegligent.manslaughter',
'Rape', 'Robbery'),
"Property Crime"=
c(`All Property Crime`='Property.crime',
'Burglary', `Larceny Theft`='Larceny.theft',
`Motor Vehicle Theft`='Motor.vehicle.theft')),
selected="Violent.crime"),
selectizeInput("mapyInput", label=strong("Year"),
choices=1995:2019, selected=2019),
tags$small(
br(), br(),
strong("Data Source:"),
a(href="https://ucr.fbi.gov/crime-in-the-u.s",
"FBI's Crime Data"))
),
mainPanel(
br(),
plotOutput("crimemap", width=920, height=520)
)
)
)
)
server <- function(input, output){
## map data
dtmap <- reactive({
uscrime %>%
filter(Data=="Rate") %>%
right_join(usstates, by=c("State"="state_name")) %>%
filter(Year==input$mapyInput) %>%
select(State, input$crime2Input, long, lat, group, state_abbv) %>%
rename(Crime=input$crime2Input)
})
## line plot data
dta <- reactive({
uscrime %>%
filter(Data=="Rate") %>%
filter(State %in% input$stateInput,
Year>=input$yearInput[1], Year<=input$yearInput[2]) %>%
select(State, input$crimeInput, Year) %>%
rename(Crime=input$crimeInput)
})
## waning message data
warn <- reactive({
dta() %>%
modify_if(is.character, as.factor) %>%
count(Year, State, .drop = FALSE) %>% as.data.frame %>% filter(n==0)
})
## map
output$crimemap <- renderPlot({
ggplot(dtmap(), aes(long, lat, group=group, fill=Crime)) +
geom_polygon(color="#ffffff", size=0.25) +
coord_map(projection="albers", lat0=39, lat1=45) +
labs(fill="Rate\nper\n100,000\ninhabitants") +
xlab("") +
ylab("") +
ggtitle(paste0(input$crime2Input, " Rates in ", input$mapyInput)) +
theme_minimal()
})
## line plot
output$crimeplot <- renderPlotly({
out <- ggplot(dta(), aes(x=Year, y=Crime, color=State)) +
geom_line() +
geom_point() +
xlab("Year") +
ylab(input$crimeInput) +
ggtitle(paste0("Crime Rates by State, ", input$yearInput[1], " to ", input$yearInput[2],
"<br>",
"<sup>", "Rate per 100,000 inhabitants", "</sup>")) +
theme_classic()
out %>%
ggplotly %>%
layout(annotations=
list(x=1, y=-0.11,
text=paste0("Data Source: ", "<a href='https://ucr.fbi.gov/crime-in-the-u.s'>FBI's Crime Data</a>"),
showarrow=F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="steelblue"))
)
})
## table
output$crimetable <- renderTable({
dta()
})
## warning message
output$message <- renderUI({
if(nrow(warn())!=0)
HTML(paste("Warning message: Missing data in ", warn()$State, " in ", warn()$Year, br()))
})
}
shinyApp(ui=ui, server=server)
load("~/Documents/GitHub/UScrime/uscrime.rda")
library(shiny)
library(shinyWidgets)
library(shinythemes)
library(dslabs)
library(tidyverse)
library(ggplot2)
library(plotly)
library(urbnmapr)
usstates <- urbnmapr::states
usstates$state_name <-  gsub(' ', '', usstates$state_name) %>% toupper
ui <- navbarPage("Crime in the US",
tabPanel("Line Chart",
sidebarLayout(
sidebarPanel(
selectizeInput("crimeInput", label=strong("Crime"),
choices=list("Violent Crime"=
c(`All Violent Crimes`='Violent.crime',
`Murder and Non-negligent Manslaughter`='Murder.and.nonnegligent.manslaughter',
'Rape', 'Robbery'),
"Property Crime"=
c(`All Property Crime`='Property.crime',
'Burglary', `Larceny Theft`='Larceny.theft',
`Motor Vehicle Theft`='Motor.vehicle.theft')),
selected="Violent.crime"),
selectizeInput("stateInput", label=strong("State"),
choices=unique(uscrime$State),
selected="CONNECTICUT", multiple=TRUE),
sliderInput("yearInput", label=strong("Year"), min=1995, max=2019,
value=c(1995, 2019), sep=""),
),
mainPanel(
br(),
plotlyOutput("crimeplot", width=900, height=500),
br(), br(),
uiOutput("message")
)
)
),
tabPanel("Map",
sidebarLayout(
sidebarPanel(
selectizeInput("crime2Input", label=strong("Crime"),
choices=list("Violent Crime"=
c(`All Violent Crimes`='Violent.crime',
`Murder and Non-negligent Manslaughter`='Murder.and.nonnegligent.manslaughter',
'Rape', 'Robbery'),
"Property Crime"=
c(`All Property Crime`='Property.crime',
'Burglary', `Larceny Theft`='Larceny.theft',
`Motor Vehicle Theft`='Motor.vehicle.theft')),
selected="Violent.crime"),
selectizeInput("mapyInput", label=strong("Year"),
choices=1995:2019, selected=2019),
tags$small(
br(), br(),
strong("Data Source:"),
a(href="https://ucr.fbi.gov/crime-in-the-u.s",
"FBI's Crime Data"))
),
mainPanel(
br(),
plotOutput("crimemap", width=920, height=520)
)
)
)
)
server <- function(input, output){
## map data
dtmap <- reactive({
uscrime %>%
filter(Data=="Rate") %>%
right_join(usstates, by=c("State"="state_name")) %>%
filter(Year==input$mapyInput) %>%
select(State, input$crime2Input, long, lat, group, state_abbv) %>%
rename(Crime=input$crime2Input)
})
## line plot data
dta <- reactive({
uscrime %>%
filter(Data=="Rate", State %in% input$stateInput,
Year>=input$yearInput[1], Year<=input$yearInput[2]) %>%
select(State, input$crimeInput, Year) %>%
rename(Crime=input$crimeInput)
})
## waning message data
warn <- reactive({
dta() %>%
modify_if(is.character, as.factor) %>%
count(Year, State, .drop = FALSE) %>% as.data.frame %>% filter(n==0)
})
## map
output$crimemap <- renderPlot({
ggplot(dtmap(), aes(long, lat, group=group, fill=Crime)) +
geom_polygon(color="#ffffff", size=0.25) +
coord_map(projection="albers", lat0=39, lat1=45) +
labs(fill="Rate\nper\n100,000\ninhabitants") +
xlab("") +
ylab("") +
ggtitle(paste0(input$crime2Input, " Rates in ", input$mapyInput)) +
theme_minimal()
})
## line plot
output$crimeplot <- renderPlotly({
out <- ggplot(dta(), aes(x=Year, y=Crime, color=State)) +
geom_line() +
geom_point() +
xlab("Year") +
ylab(input$crimeInput) +
ggtitle(paste0("Crime Rates by State, ", input$yearInput[1], " to ", input$yearInput[2],
"<br>",
"<sup>", "Rate per 100,000 inhabitants", "</sup>")) +
theme_classic()
out %>%
ggplotly %>%
layout(annotations=
list(x=1, y=-0.11,
text=paste0("Data Source: ", "<a href='https://ucr.fbi.gov/crime-in-the-u.s'>FBI's Crime Data</a>"),
showarrow=F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=12, color="steelblue"))
)
})
## warning message
output$message <- renderUI({
if(nrow(warn())!=0)
HTML(paste("Warning message: Missing data in ", warn()$State, " in ", warn()$Year, br()))
})
}
shinyApp(ui=ui, server=server)
View(uscrime)
